plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'
	implementation 'org.hibernate:hibernate-core'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
	compileOnly 'javax.persistence:javax.persistence-api'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-starter-validation'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks {
	bootWar {
		archiveFileName.set("mortageplan.war")
	}
}

task runExecutableWar(type: JavaExec) {
	dependsOn bootWar
	group = "Execution"
	description = "Run the output executable war with provided prospects.txt"
	classpath = files(bootWar.archiveFile.get())
	args 'prospects.txt'
}

task runExecutableWarTomcat(type: JavaExec) {
	dependsOn bootWar
	group = "Execution"
	description = "Run the output executable war as a webapp in Tomcat"
	classpath = files(bootWar.archiveFile.get())
}

task runDocker(type: Exec) {
	dependsOn bootWar
	// TODO: copy out WAR as Dockerfile source, now it uses hardcoded defaults
	commandLine "docker", "run", "-p", "8080:8080","--name", "mortageplan_tomcat", "tomcat"
}
